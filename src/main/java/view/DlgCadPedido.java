/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import control.GerenciadorInterGrafica;
import control.PedidoProdutoTableModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.Fabricante;
import model.PedidoProduto;
import model.Produto;

/**
 *
 * @author Paulo
 */
public class DlgCadPedido extends javax.swing.JDialog {

    private Cliente cliSelecionado;

    private PedidoProdutoTableModel pedidoProdutoModel;

    public DlgCadPedido(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        configurePopupMenu();

        pedidoProdutoModel = new PedidoProdutoTableModel(); // Inicializa o modelo
        tabela.setModel(pedidoProdutoModel); // Associa o modelo à tabela
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popCadPecas = new javax.swing.JPopupMenu();
        mnuCadastar = new javax.swing.JMenuItem();
        mnuExcluir = new javax.swing.JMenuItem();
        cmbFab1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        lblCodigo1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblPreco1 = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        lblData = new javax.swing.JLabel();
        dtPedido = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        txtQtde = new javax.swing.JTextField();
        lblFabricante = new javax.swing.JLabel();
        cmbFab = new javax.swing.JComboBox();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnAddProduto = new javax.swing.JButton();

        mnuCadastar.setText("jMenuItem1");
        popCadPecas.add(mnuCadastar);

        mnuExcluir.setText("jMenuItem1");
        popCadPecas.add(mnuExcluir);

        cmbFab1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fiat", "Volkswagen", "Toyota", "Chevrolet", " " }));
        cmbFab1.setSelectedIndex(1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações"));

        lblCodigo1.setText("Código");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        lblPreco1.setText("Preco");

        txtPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoActionPerformed(evt);
            }
        });

        lblData.setText("Data Pedido");

        dtPedido.setDateFormatString("dd/MM/yyyy");

        jLabel1.setText("Qtde");

        lblFabricante.setText("Fabricante");

        lblNome.setText("Nome");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblFabricante)
                        .addGap(18, 18, 18)
                        .addComponent(cmbFab, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblCodigo1)
                                        .addComponent(lblPreco1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(27, 27, 27))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblData)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQtde)
                            .addComponent(txtCodigo)
                            .addComponent(txtPreco)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreco1)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblData)
                    .addComponent(dtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFabricante)
                    .addComponent(cmbFab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/png/16x16/add.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/png/16x16/remove.png"))); // NOI18N
        btnApagar.setText("Apagar");
        btnApagar.setToolTipText("");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Pedidos"));
        jPanel5.setLayout(new java.awt.BorderLayout());

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Preco", "Qtde", "Fabricante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setShowHorizontalLines(true);
        tabela.setShowVerticalLines(true);
        jScrollPane3.setViewportView(tabela);

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        btnAddProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add.png"))); // NOI18N
        btnAddProduto.setText("Produto");
        btnAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(btnCadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btnAddProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddProduto)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnApagar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if (pedidoProdutoModel == null) {
            pedidoProdutoModel = new PedidoProdutoTableModel(); // Inicializa se não foi feito antes
        }

        // Obter os valores dos campos de entrada
        String preco = txtPreco.getText();
        String Qtde = txtQtde.getText();

        // Verificação se os campos não estão vazios
        if (preco.trim().isEmpty() || Qtde.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos os campos são obrigatórios.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Converter os valores de texto para os tipos apropriados
            double pre = Double.parseDouble(preco);
            int quantidade = Integer.parseInt(Qtde);

            // Validar a quantidade e o preço
            if (quantidade <= 0) {
                JOptionPane.showMessageDialog(this, "A quantidade deve ser maior que zero.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (pre <= 0) {
                JOptionPane.showMessageDialog(this, "O preço deve ser maior que zero.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Inserir o pedido com os dados fornecidos
            GerenciadorInterGrafica.getMyInstance().getGerDom().inserirPedido(dtPedido.getDate(), pre, quantidade, cliSelecionado, pedidoProdutoModel.getLista());

            // Exibir uma mensagem de sucesso
            JOptionPane.showMessageDialog(this, "Pedido inserido com sucesso.", "Cadastro de Pedido", JOptionPane.INFORMATION_MESSAGE);

        } catch (NumberFormatException e) {
            // Captura qualquer erro de conversão (por exemplo, se o preço ou quantidade não forem numéricos)
            JOptionPane.showMessageDialog(this, "Por favor, insira valores válidos para código, preço e quantidade.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this,
                "Tem certeza que deseja apagar todos os dados?",
                "Confirmar Exclusão",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (resposta == JOptionPane.YES_OPTION) {
            PedidoProdutoTableModel modelo = (PedidoProdutoTableModel) tabela.getModel();
            modelo.limpar();  // Apaga todas as linhas da tabela
            JOptionPane.showMessageDialog(this, "Todos os dados foram apagados.", "Informação", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Ação cancelada. Nenhum dado foi apagado.", "Cancelamento", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void txtPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        GerenciadorInterGrafica.getMyInstance().carregarCombo(cmbFab, Fabricante.class);
    }//GEN-LAST:event_formComponentShown

    private void btnAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdutoActionPerformed
        String nome = txtNome.getText();  // Nome do produto
        String precoText = txtPreco.getText();  // Preço do produto
        Fabricante fabricante = (Fabricante) cmbFab.getSelectedItem();  // Fabricante selecionado
        String qtdeText = txtQtde.getText();  // Quantidade do produto a ser adicionada ao pedido
        String cod = txtCodigo.getText();
        // Validação dos campos
        if (nome.isEmpty() || precoText.isEmpty() || fabricante == null || qtdeText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verificar se preço e estoque são números válidos
        double preco;
        int quantidade;
        int codigo;
        try {
            preco = Double.parseDouble(precoText);
            quantidade = Integer.parseInt(qtdeText);
            codigo = Integer.parseInt(cod);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Preço, Estoque ou Quantidade inválido. Por favor, insira números válidos.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Inserir produto no banco de dados
        Produto novoProduto = new Produto(nome, preco, codigo);
        novoProduto.setFabricante(fabricante);

        try {
            int idProduto = GerenciadorInterGrafica.getMyInstance().getGerDom().inserirProduto(nome, preco, codigo, fabricante);
            JOptionPane.showMessageDialog(null, "Produto inserido com sucesso! ID: " + idProduto, "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            // **Criar o ProdutoPedido**
            Produto produto = novoProduto;  // Produto inserido no banco

            // Criar um objeto PedidoProduto (associando produto e quantidade)
            PedidoProduto itemPedido = new PedidoProduto(null, produto, quantidade);

            // Adicionar o PedidoProduto ao TableModel
            pedidoProdutoModel.adicionar(itemPedido);  // Atualiza a tabela com o novo item

            // Atualizar a interface (limpar os campos, por exemplo)
            limparCamposProduto();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao adicionar produto: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAddProdutoActionPerformed

    private void excluirLinhaSelecionada() {
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        int selectedRow = tabela.getSelectedRow(); // Obtém a linha selecionada

        if (selectedRow != -1) { // Verifica se alguma linha está selecionada
            modelo.removeRow(selectedRow); // Remove a linha selecionada
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir.", "Cadastro de Peças", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void cadastrarDados() {
        // Coletando dados do usuário
        String nome = JOptionPane.showInputDialog(this, "Digite o nome da peça:");
        if (nome == null || nome.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O nome da peça não pode ser vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String entrada = JOptionPane.showInputDialog(this, "Digite o código da peça:");
        if (entrada == null || entrada.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O número da peça não pode ser vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int codigo;
        try {
            codigo = Integer.parseInt(entrada);
        } catch (NumberFormatException e) {
            // Se a conversão falhar, informa ao usuário e sai do método
            JOptionPane.showMessageDialog(this, "Por favor, insira um número inteiro válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verifica se o código já existe na tabela
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            int codigoExistente = (int) model.getValueAt(i, 1); // Supondo que o código está na coluna 1
            if (codigoExistente == codigo) {
                JOptionPane.showMessageDialog(this, "O código " + codigo + " já está cadastrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        String entrada1 = JOptionPane.showInputDialog(this, "Digite o preço da peça :");
        if (entrada1 == null || entrada.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O número da peça não pode ser vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        float preco;
        try {
            preco = Float.parseFloat(entrada1);
        } catch (NumberFormatException e) {
            // Se a conversão falhar, informa ao usuário e sai do método
            JOptionPane.showMessageDialog(this, "Por favor, insira um preço válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String fabricante = (String) cmbFab.getSelectedItem();
        if (fabricante == null || fabricante.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um fabricante.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Adicionando a peça à tabela
        model.addRow(new Object[]{nome, codigo, preco, fabricante});
        JOptionPane.showMessageDialog(this, "Peça cadastrada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    }

    private void configurePopupMenu() {
        popCadPecas = new JPopupMenu();

        JMenuItem cadastrarItem = new JMenuItem("Cadastrar");
        cadastrarItem.addActionListener(e -> cadastrarDados());
        popCadPecas.add(cadastrarItem);

        JMenuItem apagarItem = new JMenuItem("Excluir");
        apagarItem.addActionListener(e -> excluirLinhaSelecionada());
        popCadPecas.add(apagarItem);

        tabela.setComponentPopupMenu(popCadPecas);
    }

    private void limparCamposProduto() {
        // Limpar os campos de texto
        txtNome.setText("");  // Nome do produto
        txtPreco.setText("");  // Preço do produto
        txtQtde.setText("");  // Quantidade do produto no pedido

        cmbFab.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduto;
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JComboBox cmbFab;
    private javax.swing.JComboBox cmbFab1;
    private com.toedter.calendar.JDateChooser dtPedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCodigo1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblFabricante;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPreco1;
    private javax.swing.JMenuItem mnuCadastar;
    private javax.swing.JMenuItem mnuExcluir;
    private javax.swing.JPopupMenu popCadPecas;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQtde;
    // End of variables declaration//GEN-END:variables
}
